<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.moyun.Dao.BlogDao">
    <select id="getBlogByBlogID" resultType="Blog">
        select *
        from blog_info
        where blogid=#{BlogID}
    </select>
    <select id="getAllBlog" resultType="Blog">
        select *
        from blog_info
    </select>
    <delete id="deleteBlog" parameterType="Blog">
        delete from blog_info
        where blogid=#{BlogID}
    </delete>
    <select id="getBlogCollectionByUserID" resultType="BlogCollection">
        select *
        from blog_collection
        where userid=#{UserID}
    </select>
    <select id="getBlogListByUserID" resultType="Blog">
        select *
        from blog_info
        where authorid=#{UserID}
    </select>
    <insert id="addBlog" parameterType="Blog">
        insert into blog_info(blog_title, authorid, recent_finish_time, content)
        values(#{BlogTitle},#{AuthorID},#{RecentFinishTime},#{Content})
    </insert>
    <update id="editBlog" parameterType="Blog">
        update blog_info set blog_title=#{BlogTitle},recent_finish_time=#{RecentFinishTime},content=#{Content}
        where blogid=#{BlogID}
    </update>
    <insert id="reprintBlog" parameterType="Blog">
        insert into blog_info(blog_title, authorid, recent_finish_time, content,is_reprint)
        values(#{BlogTitle},#{AuthorID},#{RecentFinishTime},#{Content},#{isReprint})
    </insert>
    <insert id="collectBlog" parameterType="BlogCollection">
        insert into blog_collection(blogid, userid, collect_time)
        values (#{BlogID},#{UserID},#{CollectTime})
    </insert>
    <update id="likeBlog" parameterType="Blog">
        update blog_info
        set likes=likes+1
        where blogid=#{BlogID}
    </update>
    <update id="cancelLikeBlog" parameterType="Blog">
        update blog_info
        set likes=likes-1
        where blogid=#{BlogID}
    </update>
    <delete id="cancelCollectBlog" parameterType="BlogCollection">
        delete from blog_collection
        where blogid=#{BlogID} and userid=#{UserID}
    </delete>
    <insert id="addBlogComment" parameterType="BlogComment">
        insert into blog_comment(blogid, userid, comment, comment_time)
        values(#{BlogID},#{UserID},#{Comment},#{CommentTime})
    </insert>
    <select id="getBlogCommentListByBlogID" resultType="BlogComment">
        select *
        from blog_comment
        where blogid=#{BlogID}
        order by comment_time
    </select>
    <delete id="deleteBlogComment" parameterType="BlogComment">
        delete from blog_comment
        where blogid=#{BlogID}
    </delete>
    <delete id="deleteBlogCollection" parameterType="BlogCollection">
        delete from blog_collection
        where blogid=#{BlogID}
    </delete>
    <select id="getBlogDT" resultType="Blog">
        select *
        from blog_info
        where authorid in (
               select followedid from (
                   select followedid from follow_list where followerid=#{UserID}
                   ) as test
               )
    </select>
    <select id="isCollect" resultType="BlogCollection">
        select *
        from blog_collection
        where userid=#{UserID} and blogid=#{BlogID}
    </select>
</mapper>